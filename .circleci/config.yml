# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
       - image: circleci/ruby:2.6.1-node-browsers-legacy

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle
            yarn install

      - run:
          name: build frontend assets
          command: |
            yarn run build

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      - persist_to_workspace:
          root: .
          paths:
            - .

  rspec:
    docker:
      - image: circleci/ruby:2.6.1-node-browsers-legacy
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: .
      - run:
          name: run tests
          command: |
            # これがないとbundlerがvendor/bundleに向いてくれない。なぜ...?。.bundle/config作ってがvendor/bundleに向けるように書いてもダメだった。
            bundle install --jobs=4 --retry=3 --path vendor/bundle
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
            bundle exec rspec $TEST_FILES

  bundle_update:
    docker:
      - image: circleci/ruby:2.6.1-node-browsers-legacy
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: .
      - run:
          name: run bundle update
          command: |
            gem install circleci-bundle-update-pr
            circleci-bundle-update-pr pipopotamasu ec0156hx@gmail.com master -d
          no_output_timeout: 1h
          when: always

  yarn_test:
    docker:
      - image: circleci/ruby:2.6.1-node-browsers-legacy
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: .
      - run:
          name: yarn test
          command: |
            yarn install
            yarn test

  yarn_upgrade:
    docker:
      - image: circleci/ruby:2.6.1-node-browsers-legacy
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: .
      - run:
          name: run yarn upgrade
          command: |
            mkdir -p ~/.ssh
            touch ~/.ssh/known_hosts
            ssh-keygen -R github.com,192.30.253.113
            ssh-keyscan -H github.com,192.30.253.113 >> ~/.ssh/known_hosts
            yarn global add ci-yarn-upgrade
            export PATH="$PATH:`yarn global bin`"
            GIT_USER_NAME=pipopotamasu GIT_USER_EMAIL=ec0156hx@gmail.com GITHUB_ACCESS_TOKEN=${GITHUB_ACCESS_TOKEN} ci-yarn-upgrade --execute --verbose --latest

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - rspec:
          requires:
            - build
      - yarn_test:
          requires:
            - build
  build_and_bundle_update:
    jobs:
      - build
      - bundle_update:
          requires:
            - build
    triggers:
      - schedule:
          cron: "0 2 1 * *" # JST: 11:00
          filters:
            branches:
              only: master
  build_and_yarn_upgrade:
    jobs:
      - build
      - yarn_upgrade:
          requires:
            - build
    triggers:
      - schedule:
          cron: "0 2 1 * *" # JST: 11:00
          filters:
            branches:
              only: master
